@import "./normalize.css";

:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-headings: #1b0760;
  --color-body: #918ca4;
  --color-body-darker: #5c5577;
  --color-border: #ccc;
  --border-radius: 30px;
}
*,
::after,
*::before {
  box-sizing: border-box;
}
/* 1. Typography 字体设置 */
::selection {
  background-color: var(--color-primary);
  color: #fff;
}
html {
  font-size: 62.5%;
  overflow: hidden;
  overflow-y: auto;
}
body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5;
  color: var(--color-body);
  overflow: hidden;
  overflow-y: auto;
}
h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem;
  line-height: 1.1;
}
h1 {
  font-size: 7rem;
}
h2 {
  font-size: 4rem;
}
h3 {
  font-size: 3rem;
  line-height: 1.3;
  font-weight: 600;
}
p {
  margin-top: 0;
}
@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }
  h1 {
    font-size: 8rem;
  }

  h3 {
    font-size: 2.4rem;
  }
}
/* 2. Links */
a {
  text-decoration: none;
}
.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}
.link-arrow::after {
  content: "-->";
  margin-left: 5px;
}
.link-arrow:hover::after {
  margin-left: 10px;
}
@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}
/* 3. badges 大小标签 */
/* 先定义结构 然后是外观 */
.badge {
  white-space: nowrap;
  padding: 0.5rem 2rem;
  font-weight: 600;
  font-size: 2rem;
  color: #fff;
  border-radius: 20px;
}
/* BEM命名规范
1. .block {}  代表了更高级别的抽象或组件。

2. .block__element {} 代表.block的后代，用于形成一个完整的.block的整体。

3. .block--modifier {} 代表.block的不同专题或不同版本或不同的区块。

4. _ 单下划线：单下划线用来描述一个块或者块的子元素的一种状态。
*/

.badge--primary {
  background-color: var(--color-primary);
}
.badge--secondary {
  background-color: var(--color-secondary);
}

.badge--small {
  font-size: 1.6rem;
  padding: 0.5rem 1.5rem;
}

@media screen and (min-width: 1024px) {
  /* 正常默认是大标签  */
  .badge {
    font-size: 1.5rem;
  }
  .badge--small {
    font-size: 1.2rem;
  }
}
/* 4. Lists 列表 */
.list {
  list-style: none;
  padding-left: 0;
  /* color: var(--color-headings); */
}
/* 
list__item
我们将区域名和结构名用双下划线分开
这个item元素是区域内表达的元素，他不是另一个单独的元素或者组件，它只是存在于这个列表中的
 */
/* 
  list--inline 不同的区块 也就是横行排练变成行内样式，
  但是行内样式 padding有四边的边距但是上下不能撑开盒子，
  margin 只有左右的边距 所以要设置成行内块样式，   
   <p>ssss <span>ssss</span> </p
 */
/*p {
  background-color: red;
}
span {
  background-color: gold;
  padding: 20px;
  margin: 20px;
}*/

.list--inline .list__item {
  display: inline-block;
  margin-right: 2rem;
}
.list--tick {
  list-style-image: url(../images/tick.svg);
  padding-left: 3rem;
  color: var(--color-headings);
}
.list--tick .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}
@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0;
  }
}
/* 5. Icons */
.icon {
  width: 40px;
  height: 40px;
}
/* icon具体颜色*/
.icon--primary {
  fill: var(--color-primary);
}
.icon--white {
  fill: #fff;
}

.icon-container {
  background-color: #f3f9fa;
  width: 64px;
  height: 64px;
  border-radius: 100%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
.icon-container--accent {
  background-color: var(--color-accent);
}
/* 5. Buttons  */
/* 1.先文本 再是内边距 圆角 */
.btn {
  font-size: 1.8rem;
  font-weight: 600;
  text-transform: uppercase;
  /* padding: 2rem 3rem; */
  padding: 2rem 4vw;
  border-radius: 40px;
  border: 0;
  margin: 1rem 0;
  cursor: pointer;
  white-space: nowrap;
  text-align: center;
  outline: 0;
}
/* 如果按钮里面有图标 */
.btn .icon {
  width: 2rem;
  height: 2rem;
  margin-right: 1rem;
  /* vertical-align 属性设置元素的垂直对齐方式。
css中的vertical-align 属性只能用于 行内元素 和 置换元素（例如 图像和表单输入框） ，此属性不继承 */
  vertical-align: middle;
}
.btn--primary {
  background-color: var(--color-primary);
  color: #fff;
}
.btn--primary:hover {
  background-color: #3a8ffd;
}
.btn--secondary {
  background-color: var(--color-secondary);
  color: #fff;
}
.btn--secondary:hover {
  background-color: #00c8eb;
}
.btn--accent {
  background-color: var(--color-accent);
  color: #fff;
}
.btn--accent:hover {
  background-color: #ec3000;
}
/* a标签 转换为行内块 */
.btn--block {
  width: 100%;
  display: inline-block;
}
/*  长按钮 */
.btn--streched {
  padding-left: 6rem;
  padding-right: 6rem;
}
/* 轮廓线  */
.btn--outline {
  background-color: #fff;
  color: var(--color-headings);
  border: 2px solid var(--color-headings);
}
.btn--outline:hover {
  background-color: var(--color-headings);
  color: #fff;
}
@media screen and (min-width: 1024px) {
  .btn {
    font-size: 1.5rem;
  }
}
/* 6 Inputs */

.input {
  padding: 1.5rem 3.5rem;
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  outline: 0;
  color: var(--color-headings);
  font-size: 2rem;
}
::placeholder {
  color: #cdcbd7;
}
/* 用于存放input和button */
.input-group {
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  display: flex;
}
.input-group .input {
  border: 0;
  /* flex:1 1 auto; */
  /* flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto */
  flex-grow: 1;
  /* button 不管剩余空间多少也不会放大 */
  padding: 1.5rem 2rem;
  /* 让输入框的宽度由input-group决定  */
  width: 0;
  /* 如果没有设置width,当内部元素的内容大小超过平均分配的剩余空间时,元素的宽度等于内容大小,如果设置了width并且这个width的大小小于平均分配的剩余空间大小时,取平均分配的剩余空间;
当flex设置为 1 时 相当于 剩余空间大小 = 父元素的宽度 因此
平均的剩余空间大小等于 = 父元素的宽度 / 元素的个数
直接设置width为0可以保证元素宽度平分父元素宽度 */
  /* 假设：设置flex：1的项为A

所以，当A项的width为0时，剩余空间等于容器的宽度减去除A项以外（因为此时它的width为0），其他flex项的大小 ，然后把剩余空间给A项

补充：width也可以不设为0，只要设置的宽度不大于剩余空间就可以，因为此时的剩余空间为 flex 容器的宽度减去所有 flex 项的宽度加起来的大小，然后把剩余空间给A项 */
}
.input-group .btn {
  margin: 4px;
}
@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}
/* 7. Cards */

.card {
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3;
}
/* 防止圆角被背景图片覆盖给自己加上圆角 */
.card__header {
  border-radius: 7px 7px 0 0;
}
.card__header,
.card__body {
  padding: 2rem 3rem;
}
.card--primary .card__header {
  background-color: var(--color-primary);
  color: #fff;
  /* 因为我们是给父级元素card 设置圆角 所以给子元素card__header设置背景色就发生了溢出 */
}
.card--secondary .card__header {
  background-color: var(--color-secondary);
  color: #fff;
}
.card--primary .badge--primary {
  background-color: #126de4;
}
.card--secondary .badge--secondary {
  background-color: #02cdf1;
}
/*  8 Plans*/
.plan {
  transition: transform 0.2s ease-out;
}
.plan__name {
  color: #fff;
  margin: 0;
  font-weight: 500;
  font-size: 2.4rem;
}
.plan__price {
  font-size: 6rem;
}
.plan_billing-cycle {
  font-size: 2.4rem;
  font-weight: 300;
  opacity: 0.8;
  margin-right: 1rem;
}
.plan__description {
  font-size: 2rem;
  font-weight: 300;
  letter-spacing: 1px;
  display: block;
}
.plan .list__item {
  margin-bottom: 2rem;
}
.plan--popular {
  transform: scale(1.1);
}
.plan--popular .card__header {
  position: relative;
}

.plan--popular .card__header::before {
  content: url(../images/popular.svg);
  width: 40px;
  display: inline-block;
  position: absolute;
  top: -8px;
  right: 5%;
}
.plan:hover {
  transform: scale(1.05);
}
.plan--popular:hover {
  transform: scale(1.15);
}
@media screen and (min-width: 1024px) {
  .plan__name {
    font-size: 1.4rem;
  }
  .plan__price {
    font-size: 5rem;
  }
  .plan__billing-cycle {
    font-size: 1.6rem;
  }
  .plan__description {
    font-size: 1.7rem;
  }
}
/* 9.media  */
.media {
  display: flex;
  margin-bottom: 3rem;
  margin-left: 3rem;
}
.media__title {
  margin-top: 0;
}
.media__body {
  margin: 0 2rem;
}
.media__image {
  margin-top: 1rem;
}
/* 10. quotes */

.quote {
  font-size: 3rem;
  font-style: italic;
  color: var(--color-body-darker);
  line-height: 1.3;
}
.quote__text::before {
  content: open-quote;
}
.quote__text::after {
  content: close-quote;
}
.quote__author {
  font-size: 3rem;
  font-weight: 500;
  font-style: normal;
  margin-bottom: 0;
}
.quote__organization {
  color: var(--color-headings);
  opacity: 0.4;
  font-size: 2rem;
  font-style: normal;
}
/* 相对于原来的位置移动 不脱离文档流 */
.quote__line {
  position: relative;
  bottom: 10px;
}
@media screen and (min-width: 1024px) {
  .quote {
    font-size: 2rem;
  }
  .quote__author {
    font-size: 2.4rem;
  }
  .quote__organization {
    font-size: 1.6rem;
  }
}
/* 11.gird */
.grid {
  display: grid;
}
/* 平板 */
@media screen and (min-width: 768px) {
  .grid--1x2 {
    grid-template-columns: 1fr 1fr;
  }
  .grid--1x3 {
    grid-template-columns: 1fr 1fr 1fr;
  }
}
@media screen and (min-width: 1024px) {
  .grid--1x3 {
    grid-template-columns: 1fr 1fr 1fr;
  }
}
/* 12. Testimonials 推荐模块 */

.testimonial {
  padding: 3rem;
  overflow: visible;
}
.testimonial__image {
  position: relative;
}
/* 将图片变成响应式 因为设置了网格 */
.testimonial__image > img {
  width: 100%;
}
.testimonial__image > .icon-container {
  position: absolute;
  top: 3rem;
  right: -32px;
}
@media screen and (min-width: 768px) {
  .testimonial .quote,
  .testimonial .quote__author {
    font-size: 2.4rem;
  }
  .testimonial .quote {
    margin-left: 12rem;
  }
}
/*  13. Callouts 气泡组合*/
.callout {
  padding: 4rem;
  border-radius: 5px;
}
.callout--primary {
  background-color: var(--color-primary);
  color: #fff;
}
.callout__heading {
  color: #fff;
  margin-top: 0;
  font-size: 3rem;
}
.callout .btn {
  justify-self: center;
  align-self: center;
}
.callout__content {
  text-align: center;
}
@media screen and (min-width: 768px) {
  /* 桌面模式下多出了空白部分  重新分配网格的大小 让按钮自动适应 文字内容部分分配剩余的大小 */
  .callout .grid--1x2 {
    grid-template-columns: 1fr auto;
  }
  /* 桌面模式下 的内容是左对齐 */
  .callout__content {
    text-align: left;
  }
  /* 桌面模式下的按钮 */
  .callout .btn {
    justify-self: start;
    margin: 0 2rem;
  }
  /* 存在一个btn--streched */
}
/* 14. Collapsible 底部折叠组件  */

.collapsible__header {
  display: flex;
  /* 两端对齐 */
  justify-content: space-between;
}
.collapsible__heading {
  margin-top: 0;
  font-size: 3rem;
}

.collapsible__chevron {
  transform: rotate(-90deg);
  transition: transform 0.3s;
}
.collapsible__content {
  display: none;
  /* max-height 因为display 不能设置过渡 */
  /* max-height: 0; */
  overflow: hidden;
  opacity: 0;
  /* transition: max-height 0.3s; */
  transition: all 0.5s;
}
.collapsible--expanded .collapsible__chevron {
  transform: rotate(0);
}
.collapsible--expanded .collapsible__content {
  display: block;
  /* max-height: 100vh; */
  opacity: 1;
}
/* 15. Blocks 块 */
/* 如果block的内部距发生变化 斜切内边距也要发生变化 */
.block {
  --padding-vertical: 6rem;
  /* Due to their dynamic nature, CSS variables are currently not statically checked */
  /* Add a default value in case the variable isn't defined and you're set: */
  padding: var(--padding-vertical, 6rem) 2rem;
  /* border: 2px solid red; */
}
.block__header {
  text-align: center;
  margin-bottom: 4rem;
}
.block__heading {
  margin-top: 0;
}
.block--dark {
  background-color: #000;
  color: #7b858b;
}
/* .block--dark .block__heading {
  color: #fff;
} */
.block--dark h1,
.block--dark h2,
.block--dark h3 {
  color: #fff;
}
/* 设置区块的最大宽度 */
.container {
  max-width: 1140px;
  margin: 0 auto;
}
/* 路径裁切 */
/* 右斜切 */
.block--skewed-right {
  padding-bottom: calc(var(--padding-vertical) + 4rem);
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 95%);
}

.block--skewed-left {
  padding-bottom: calc(var(--padding-vertical) + 4rem);
  clip-path: polygon(0% 0%, 100% 0%, 100% 95%, 0% 100%);
}

/* Ultimate  */
/* 1.avigation bars */
.nav {
  background-color: #000;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  padding: 1rem;
  align-items: center;
}
.nav__image {
  transform: translateY(5px);
  width: 150px;
}
img {
  width: 100%;
}
.nav__list {
  /* 因为flex 布局 space-between两端对齐 平分空间 如果占了100%它就要换行了 */
  width: 100%;
  /* ul的margin */
  margin: 0;
}
.nav__item {
  padding: 0.5rem 2rem;
  border-bottom: 1px solid #222;
}
.nav__item:last-of-type {
  border-bottom: none;
}
.nav__item > a {
  color: #d2d0db;
  transition: color 0.3s;
}
.nav__item > a:hover {
  color: #fff;
}
.nav__toggler {
  opacity: 0.5;
  transition: box-shadow 0.15s;
  cursor: pointer;
}
.nav.collapsible--expanded .nav__toggler {
  opacity: 1;
  box-shadow: 0 0 0 3px #666;
  border-radius: 5px;
}
@media screen and (min-width: 768px) {
  .nav__toggler {
    display: none;
  }
  .nav__list {
    width: auto;
    display: flex;
    font-size: 1.6rem;
    max-height: 100%;
    opacity: 1;
  }
  .nav__item {
    border: 0;
  }
}
/* 2. Hero 大横幅组件  + op*/
.hero {
  clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
}
.hero__tagline {
  font-size: 2rem;
  color: #b9c3cf;
  letter-spacing: 1px;
  margin: 2rem 0 5rem;
}
.hero__image {
  width: 100%;
}
@media screen and (min-width: 768px) {
  /* 我们希望有一点顶padding 但是在pc端 图片有这个长度*/
  .hero {
    padding-top: 0;
  }
  .hero__content {
    text-align: left;
    align-self: center;
  }
}
/* 3. domain block */
.block-domin .input-group {
  box-shadow: 0 0 30px 20px #ecebee;
  border: 0;
  margin: 4rem auto;
  max-width: 700px;
}
.block-domain__prices {
  color: var(--color-headings);
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 6rem);
  font-size: 2rem;
  font-weight: 600;
  justify-items: center;
  max-width: 750px;
  margin: 0 auto;
}
/* 将所有的列表排入一行 */
@media screen and (min-width: 768px) {
  .block-domain__prices {
    /* grid-template-columns: repeat(6,1fr); */
    /* 不能固定这个6 如果要增加或者删除一项呢 
     auto-fit 尽量平均分配所有项
     minmax（100px，1fr）最小宽度是100px 最大宽度是等分的宽度
    */
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
  }
}
/* 4. plan block */
.block-plans .grid {
  gap: 8rem 4rem;
}
/* 移动端太宽 */
.block-plans .card {
  max-width: 500px;
  margin: 0 auto;
}
.block-plans .plan__description {
  color: #000;
  font-weight: bold;
}
/* 5.features 特性 */
.feature {
  gap: 4rem 2rem;
  margin: 10rem 0;
}
.feature:first-of-type {
  margin-top: 6rem;
}
.feature__image {
  width: 100%;
}
.feature__heading {
  margin: 1rem 0;
}
@media screen and (min-width: 768px) {
  .feature:nth-of-type(even) .feature__content {
    order: 1;
  }
}
/* 6. showcase block 展示模块 */
.block-showcase__image > img {
  width: 100%;
}

@media screen and (min-width: 768px) {
  /* 这样图片就会显示原来的尺寸  导致media 内容就被压缩了*/
  .block-showcase__image {
    justify-self: end;
  }
  .block-showcase__image > img {
    width: auto;
    max-width: 700px;
  }
  /* 为了让图片和media内容各占表格的一半宽度 */
  .block-showcase .grid {
    grid-template-columns: 50% 50%;
    /* justify-items: end; */
  }
}
/* 7. Testimonials block */
/* 8. callout-signup */
.callout-signup {
  transform: translateY(14rem);
}
@media screen and (min-width: 768px) {
  .callout-signup {
    /* transform: translateY(14rem); */
    margin: 0 10rem;
  }
}
/* 9. Footer 底部导航*/
.footer {
  background-color: #232323;
  padding-top: 20rem;
}
.footer__section {
  padding: 2rem;
  border-bottom: 1px solid #393939;
}
.footer a {
  color: #777;
  transition: color 0.3s;
}
.footer a:hover {
  color: #fff;
}
.footer__section {
  padding: 2rem;
  border-bottom: 1px solid #393939;
}
.footer__section .list {
  margin: 0;
}
.footer__heading {
  text-transform: uppercase;
  font-weight: 600;
  font-size: 2.5rem;
  line-height: 1.5;
}
.footer__brand {
  margin-top: 5rem;
  text-align: center;
}
.footer__brand img {
  /* TODO: 考虑将100%宽度应用于所有img的标签 */
  max-width: 230px;
  width: 100%;
}
.footer__copyright {
  font-size: 2.1rem;
  color: #fff;
  opacity: 0.3;
}

@media screen and (min-width: 768px) {
  .footer {
    font-size: 1.5rem;
  }
  .footer__heading {
    font-size: 1.6rem;
  }

  .footer__sections {
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    /* grid-template-columns: repeat(5, 1fr); */
  }
  .footer .collapsible__chevron {
    display: none;
  }
  .footer .collapsible__content {
    opacity: 1;
    /* max-height: 100%; */
    display: block;
  }
  .footer__brand {
    order: -1;
    margin-top: 1rem;
  }
  .footer__copyright {
    font-size: 1.5rem;
  }
  .footer__section {
    border: 0;
  }
}
/* 9. 整合 */
